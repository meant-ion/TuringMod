"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseLogger = void 0;
var shared_utils_1 = require("@d-fischer/shared-utils");
var isNode = require("detect-node");
var getMinLogLevelFromEnv_1 = require("./getMinLogLevelFromEnv");
var LogLevel_1 = require("./LogLevel");
var BaseLogger = /** @class */ (function () {
    function BaseLogger(_a) {
        var name = _a.name, minLevel = _a.minLevel, _b = _a.emoji, emoji = _b === void 0 ? false : _b, _c = _a.colors, colors = _c === void 0 ? true : _c, _d = _a.timestamps, timestamps = _d === void 0 ? isNode : _d;
        var _e, _f;
        this._name = name;
        this._minLevel = (_f = (_e = shared_utils_1.mapOptional(minLevel, function (lv) { return LogLevel_1.resolveLogLevel(lv); })) !== null && _e !== void 0 ? _e : getMinLogLevelFromEnv_1.getMinLogLevelFromEnv(name)) !== null && _f !== void 0 ? _f : LogLevel_1.LogLevel.WARNING;
        this._emoji = emoji;
        this._colors = colors;
        this._timestamps = timestamps;
    }
    // region convenience methods
    BaseLogger.prototype.crit = function (message) {
        this.log(LogLevel_1.LogLevel.CRITICAL, message);
    };
    BaseLogger.prototype.error = function (message) {
        this.log(LogLevel_1.LogLevel.ERROR, message);
    };
    BaseLogger.prototype.warn = function (message) {
        this.log(LogLevel_1.LogLevel.WARNING, message);
    };
    BaseLogger.prototype.info = function (message) {
        this.log(LogLevel_1.LogLevel.INFO, message);
    };
    BaseLogger.prototype.debug = function (message) {
        this.log(LogLevel_1.LogLevel.DEBUG, message);
    };
    BaseLogger.prototype.trace = function (message) {
        this.log(LogLevel_1.LogLevel.TRACE, message);
    };
    return BaseLogger;
}());
exports.BaseLogger = BaseLogger;
//# sourceMappingURL=BaseLogger.js.map
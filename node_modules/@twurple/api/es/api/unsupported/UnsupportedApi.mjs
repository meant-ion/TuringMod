import { __decorate } from "tslib";
import { extractUserName, rtfm } from '@twurple/common';
import { BaseApi } from "../BaseApi.mjs";
import { ChattersList } from "./ChattersList.mjs";
/**
 * Different API methods that are not officially supported by Twitch.
 *
 * Can be accessed using `client.unsupported` on an {@ApiClient} instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const events = await api.unsupported.getChatters('yourfavoritestreamer');
 * ```
 */
let UnsupportedApi = class UnsupportedApi extends BaseApi {
    /**
     * Retrieves a list of chatters in the Twitch chat of the given channel.
     *
     * **WARNING:** In contrast to most other methods, this takes a channel *name*, not a user ID.
     *
     * @param channel The channel to retrieve the chatters for.
     */
    async getChatters(channel) {
        const channelName = extractUserName(channel);
        const data = await this._client.callApi({
            url: `https://tmi.twitch.tv/group/user/${channelName}/chatters`,
            type: 'custom'
        });
        return new ChattersList(data);
    }
};
UnsupportedApi = __decorate([
    rtfm('api', 'UnsupportedApi')
], UnsupportedApi);
export { UnsupportedApi };

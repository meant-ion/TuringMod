import type { LoggerOptions } from '@d-fischer/logger';
import type { TwitchApiCallFetchOptions, TwitchApiCallOptions } from '@twurple/api-call';
import type { AuthProvider } from '@twurple/auth';
import { TokenInfo } from '@twurple/auth';
import { BadgesApi } from './api/badges/BadgesApi';
import { HelixBitsApi } from './api/helix/bits/HelixBitsApi';
import { HelixChannelApi } from './api/helix/channel/HelixChannelApi';
import { HelixChannelPointsApi } from './api/helix/channelPoints/HelixChannelPointsApi';
import { HelixChatApi } from './api/helix/chat/HelixChatApi';
import { HelixClipApi } from './api/helix/clip/HelixClipApi';
import { HelixEventSubApi } from './api/helix/eventSub/HelixEventSubApi';
import { HelixExtensionsApi } from './api/helix/extensions/HelixExtensionsApi';
import { HelixGameApi } from './api/helix/game/HelixGameApi';
import { HelixApiGroup } from './api/helix/HelixApiGroup';
import { HelixHypeTrainApi } from './api/helix/hypeTrain/HelixHypeTrainApi';
import { HelixModerationApi } from './api/helix/moderation/HelixModerationApi';
import { HelixPollApi } from './api/helix/poll/HelixPollApi';
import { HelixPredictionApi } from './api/helix/prediction/HelixPredictionApi';
import { HelixScheduleApi } from './api/helix/schedule/HelixScheduleApi';
import { HelixSearchApi } from './api/helix/search/HelixSearchApi';
import { HelixStreamApi } from './api/helix/stream/HelixStreamApi';
import { HelixSubscriptionApi } from './api/helix/subscriptions/HelixSubscriptionApi';
import { HelixTagApi } from './api/helix/tag/HelixTagApi';
import { HelixTeamApi } from './api/helix/team/HelixTeamApi';
import { HelixUserApi } from './api/helix/user/HelixUserApi';
import { HelixVideoApi } from './api/helix/video/HelixVideoApi';
import { UnsupportedApi } from './api/unsupported/UnsupportedApi';
/**
 * Configuration for an {@ApiClient} instance.
 */
export interface ApiConfig {
    /**
     * An authentication provider that supplies tokens to the client.
     *
     * For more information, see the {@AuthProvider} documentation.
     */
    authProvider: AuthProvider;
    /**
     * Additional options to pass to the fetch method.
     */
    fetchOptions?: TwitchApiCallFetchOptions;
    /**
     * Options to pass to the logger.
     */
    logger?: Partial<LoggerOptions>;
}
/**
 * @private
 */
export interface TwitchApiCallOptionsInternal {
    options: TwitchApiCallOptions;
    clientId?: string;
    accessToken?: string;
    fetchOptions?: TwitchApiCallFetchOptions;
}
/**
 * An API client for the Twitch Helix API and other miscellaneous endpoints.
 */
export declare class ApiClient {
    private readonly _config;
    private readonly _helixRateLimiter;
    /**
     * Creates a new API client instance.
     *
     * @param config Configuration for the client instance.
     */
    constructor(config: ApiConfig);
    /**
     * Requests scopes from the auth provider.
     *
     * @param scopes The scopes to request.
     */
    requestScopes(scopes: string[]): Promise<void>;
    /**
     * Retrieves information about your access token.
     */
    getTokenInfo(): Promise<TokenInfo>;
    /**
     * Makes a call to the Twitch API using your access token.
     *
     * @param options The configuration of the call.
     */
    callApi<T = unknown>(options: TwitchApiCallOptions): Promise<T>;
    /**
     * A group of Helix API methods.
     *
     * @deprecated Please remove `.helix` from your calls to access the API namespaces directly.
     */
    get helix(): HelixApiGroup;
    /**
     * The Helix bits API methods.
     */
    get bits(): HelixBitsApi;
    /**
     * The Helix channels API methods.
     */
    get channels(): HelixChannelApi;
    /**
     * The Helix channel points API methods.
     */
    get channelPoints(): HelixChannelPointsApi;
    /**
     * The Helix chat API methods.
     */
    get chat(): HelixChatApi;
    /**
     * The Helix clips API methods.
     */
    get clips(): HelixClipApi;
    /**
     * The Helix EventSub API methods.
     */
    get eventSub(): HelixEventSubApi;
    /**
     * The Helix extensions API methods.
     */
    get extensions(): HelixExtensionsApi;
    /**
     * The Helix game API methods.
     */
    get games(): HelixGameApi;
    /**
     * The Helix Hype Train API methods.
     */
    get hypeTrain(): HelixHypeTrainApi;
    /**
     * The Helix moderation API methods.
     */
    get moderation(): HelixModerationApi;
    /**
     * The Helix poll API methods.
     */
    get polls(): HelixPollApi;
    /**
     * The Helix prediction API methods.
     */
    get predictions(): HelixPredictionApi;
    /**
     * The Helix schedule API methods.
     */
    get schedule(): HelixScheduleApi;
    /**
     * The Helix search API methods.
     */
    get search(): HelixSearchApi;
    /**
     * The Helix stream API methods.
     */
    get streams(): HelixStreamApi;
    /**
     * The Helix subscription API methods.
     */
    get subscriptions(): HelixSubscriptionApi;
    /**
     * The Helix tag API methods.
     */
    get tags(): HelixTagApi;
    /**
     * The Helix team API methods.
     */
    get teams(): HelixTeamApi;
    /**
     * The Helix user API methods.
     */
    get users(): HelixUserApi;
    /**
     * The Helix video API methods.
     */
    get videos(): HelixVideoApi;
    /**
     * The API methods that deal with badges.
     *
     * @deprecated Use {@HelixChatApi}'s badge methods instead.
     */
    get badges(): BadgesApi;
    /**
     * Various API methods that are not officially supported by Twitch.
     */
    get unsupported(): UnsupportedApi;
    /** @private */
    get _authProvider(): AuthProvider;
    private _callApiInternal;
}
//# sourceMappingURL=ApiClient.d.ts.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelixApiGroup = void 0;
const tslib_1 = require("tslib");
const cache_decorators_1 = require("@d-fischer/cache-decorators");
const common_1 = require("@twurple/common");
const BaseApi_1 = require("../BaseApi");
const HelixBitsApi_1 = require("./bits/HelixBitsApi");
const HelixChannelApi_1 = require("./channel/HelixChannelApi");
const HelixChannelPointsApi_1 = require("./channelPoints/HelixChannelPointsApi");
const HelixChatApi_1 = require("./chat/HelixChatApi");
const HelixClipApi_1 = require("./clip/HelixClipApi");
const HelixEventSubApi_1 = require("./eventSub/HelixEventSubApi");
const HelixExtensionsApi_1 = require("./extensions/HelixExtensionsApi");
const HelixGameApi_1 = require("./game/HelixGameApi");
const HelixHypeTrainApi_1 = require("./hypeTrain/HelixHypeTrainApi");
const HelixModerationApi_1 = require("./moderation/HelixModerationApi");
const HelixPollApi_1 = require("./poll/HelixPollApi");
const HelixPredictionApi_1 = require("./prediction/HelixPredictionApi");
const HelixScheduleApi_1 = require("./schedule/HelixScheduleApi");
const HelixSearchApi_1 = require("./search/HelixSearchApi");
const HelixStreamApi_1 = require("./stream/HelixStreamApi");
const HelixSubscriptionApi_1 = require("./subscriptions/HelixSubscriptionApi");
const HelixTagApi_1 = require("./tag/HelixTagApi");
const HelixTeamApi_1 = require("./team/HelixTeamApi");
const HelixUserApi_1 = require("./user/HelixUserApi");
const HelixVideoApi_1 = require("./video/HelixVideoApi");
/**
 * Groups all API calls available in Helix a.k.a. the "New Twitch API".
 *
 * Can be accessed using {@ApiClient#helix}.
 *
 * @deprecated Please remove `.helix` from your calls to access the API namespaces directly.
 */
let HelixApiGroup = class HelixApiGroup extends BaseApi_1.BaseApi {
    /**
     * The Helix bits API methods.
     */
    get bits() {
        return new HelixBitsApi_1.HelixBitsApi(this._client);
    }
    /**
     * The Helix channels API methods.
     */
    get channels() {
        return new HelixChannelApi_1.HelixChannelApi(this._client);
    }
    /**
     * The Helix channel points API methods.
     */
    get channelPoints() {
        return new HelixChannelPointsApi_1.HelixChannelPointsApi(this._client);
    }
    /**
     * The Helix chat API methods.
     */
    get chat() {
        return new HelixChatApi_1.HelixChatApi(this._client);
    }
    /**
     * The Helix clips API methods.
     */
    get clips() {
        return new HelixClipApi_1.HelixClipApi(this._client);
    }
    /**
     * The Helix EventSub API methods.
     */
    get eventSub() {
        return new HelixEventSubApi_1.HelixEventSubApi(this._client);
    }
    /**
     * The Helix extensions API methods.
     */
    get extensions() {
        return new HelixExtensionsApi_1.HelixExtensionsApi(this._client);
    }
    /**
     * The Helix game API methods.
     */
    get games() {
        return new HelixGameApi_1.HelixGameApi(this._client);
    }
    /**
     * The Helix Hype Train API methods.
     */
    get hypeTrain() {
        return new HelixHypeTrainApi_1.HelixHypeTrainApi(this._client);
    }
    /**
     * The Helix moderation API methods.
     */
    get moderation() {
        return new HelixModerationApi_1.HelixModerationApi(this._client);
    }
    /**
     * The Helix poll API methods.
     */
    get polls() {
        return new HelixPollApi_1.HelixPollApi(this._client);
    }
    /**
     * The Helix prediction API methods.
     */
    get predictions() {
        return new HelixPredictionApi_1.HelixPredictionApi(this._client);
    }
    /**
     * The Helix schedule API methods.
     */
    get schedule() {
        return new HelixScheduleApi_1.HelixScheduleApi(this._client);
    }
    /**
     * The Helix search API methods.
     */
    get search() {
        return new HelixSearchApi_1.HelixSearchApi(this._client);
    }
    /**
     * The Helix stream API methods.
     */
    get streams() {
        return new HelixStreamApi_1.HelixStreamApi(this._client);
    }
    /**
     * The Helix subscription API methods.
     */
    get subscriptions() {
        return new HelixSubscriptionApi_1.HelixSubscriptionApi(this._client);
    }
    /**
     * The Helix tag API methods.
     */
    get tags() {
        return new HelixTagApi_1.HelixTagApi(this._client);
    }
    /**
     * The Helix team API methods.
     */
    get teams() {
        return new HelixTeamApi_1.HelixTeamApi(this._client);
    }
    /**
     * The Helix user API methods.
     */
    get users() {
        return new HelixUserApi_1.HelixUserApi(this._client);
    }
    /**
     * The Helix video API methods.
     */
    get videos() {
        return new HelixVideoApi_1.HelixVideoApi(this._client);
    }
};
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "bits", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "channels", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "channelPoints", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "chat", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "clips", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "eventSub", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "extensions", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "games", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "hypeTrain", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "moderation", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "polls", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "predictions", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "schedule", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "search", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "streams", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "subscriptions", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "tags", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "teams", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "users", null);
tslib_1.__decorate([
    cache_decorators_1.CachedGetter()
], HelixApiGroup.prototype, "videos", null);
HelixApiGroup = tslib_1.__decorate([
    cache_decorators_1.Cacheable,
    common_1.rtfm('api', 'HelixApiGroup')
], HelixApiGroup);
exports.HelixApiGroup = HelixApiGroup;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelixRateLimiter = void 0;
const rate_limiter_1 = require("@d-fischer/rate-limiter");
const api_call_1 = require("@twurple/api-call");
/** @private */
class HelixRateLimiter extends rate_limiter_1.ResponseBasedRateLimiter {
    async doRequest({ options, clientId, accessToken, fetchOptions }) {
        return await api_call_1.callTwitchApiRaw(options, clientId, accessToken, fetchOptions);
    }
    needsToRetryAfter(res) {
        if (res.status === 429) {
            return +res.headers.get('ratelimit-reset') * 1000 - Date.now();
        }
        return null;
    }
    getParametersFromResponse(res) {
        const headers = res.headers;
        return {
            limit: +headers.get('ratelimit-limit'),
            remaining: +headers.get('ratelimit-remaining'),
            resetsAt: +headers.get('ratelimit-reset') * 1000
        };
    }
}
exports.HelixRateLimiter = HelixRateLimiter;

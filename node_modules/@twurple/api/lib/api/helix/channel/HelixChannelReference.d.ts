import { DataObject } from '@twurple/common';
import type { ApiClient } from '../../../ApiClient';
import type { HelixGame } from '../game/HelixGame';
import type { HelixUser } from '../user/HelixUser';
import type { HelixChannel } from './HelixChannel';
/** @private */
export interface HelixChannelReferenceData {
    broadcaster_id: string;
    broadcaster_name: string;
    game_id: string;
    game_name: string;
    title: string;
}
/**
 * A reference to a Twitch channel.
 */
export declare class HelixChannelReference extends DataObject<HelixChannelReferenceData> {
    private readonly _client;
    /** @private */
    constructor(data: HelixChannelReferenceData, client: ApiClient);
    /**
     * The ID of the channel.
     */
    get id(): string;
    /**
     * The display name of the channel.
     */
    get displayName(): string;
    /**
     * Retrieves more information about the channel.
     */
    getChannel(): Promise<HelixChannel>;
    /**
     * Retrieves more information about the broadcaster of the channel.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The ID of the game currently played on the channel.
     */
    get gameId(): string;
    /**
     * The name of the game currently played on the channel.
     */
    get gameName(): string;
    /**
     * Retrieves information about the game that is being played on the stream.
     */
    getGame(): Promise<HelixGame>;
    /**
     * The title of the channel.
     */
    get title(): string;
}
//# sourceMappingURL=HelixChannelReference.d.ts.map
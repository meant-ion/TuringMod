import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { DataObject, rawDataSymbol, rtfm } from '@twurple/common';
/**
 * An EventSub event representing a stream going live.
 */
let EventSubStreamOnlineEvent = class EventSubStreamOnlineEvent extends DataObject {
    /** @private */
    constructor(data, client) {
        super(data);
        this._client = client;
    }
    /**
     * The ID of the broadcaster.
     */
    get broadcasterId() {
        return this[rawDataSymbol].broadcaster_user_id;
    }
    /**
     * The name of the broadcaster.
     */
    get broadcasterName() {
        return this[rawDataSymbol].broadcaster_user_login;
    }
    /**
     * The display name of the broadcaster.
     */
    get broadcasterDisplayName() {
        return this[rawDataSymbol].broadcaster_user_name;
    }
    /**
     * Retrieves more information about the broadcaster.
     */
    async getBroadcaster() {
        return (await this._client.users.getUserById(this[rawDataSymbol].broadcaster_user_id));
    }
    /**
     * Retrieves more information about the stream.
     */
    async getStream() {
        return (await this._client.streams.getStreamByUserId(this[rawDataSymbol].broadcaster_user_id));
    }
    /**
     * The type of the stream going live.
     */
    get streamType() {
        return this[rawDataSymbol].type;
    }
    /**
     * The date and time when the stream was started.
     */
    get startDate() {
        return new Date(this[rawDataSymbol].started_at);
    }
};
__decorate([
    Enumerable(false)
], EventSubStreamOnlineEvent.prototype, "_client", void 0);
EventSubStreamOnlineEvent = __decorate([
    rtfm('eventsub', 'EventSubStreamOnlineEvent', 'broadcasterId')
], EventSubStreamOnlineEvent);
export { EventSubStreamOnlineEvent };

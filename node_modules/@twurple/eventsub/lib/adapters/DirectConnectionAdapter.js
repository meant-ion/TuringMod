"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectConnectionAdapter = void 0;
const tslib_1 = require("tslib");
const shared_utils_1 = require("@d-fischer/shared-utils");
const common_1 = require("@twurple/common");
const https = require("https");
const checks_1 = require("../checks");
const ConnectionAdapter_1 = require("./ConnectionAdapter");
/**
 * A WebHook connection adapter that enables a direct connection.
 *
 * Requires the server to be directly available to the internet.
 *
 * @hideProtected
 */
let DirectConnectionAdapter = class DirectConnectionAdapter extends ConnectionAdapter_1.ConnectionAdapter {
    /**
     * Creates a new simple WebHook adapter.
     *
     * @expandParams
     *
     * @param options
     */
    constructor(options) {
        super();
        checks_1.checkHostName(options.hostName);
        this._hostName = options.hostName;
        this._ssl = options.sslCert;
    }
    /** @protected */
    createHttpServer() {
        return https.createServer({
            key: this._ssl.key,
            cert: this._ssl.cert
        });
    }
    /** @protected */
    // eslint-disable-next-line @typescript-eslint/class-literal-property-style
    get listenUsingSsl() {
        return true;
    }
    /** @protected */
    async getHostName() {
        return this._hostName;
    }
};
tslib_1.__decorate([
    shared_utils_1.Enumerable(false)
], DirectConnectionAdapter.prototype, "_ssl", void 0);
DirectConnectionAdapter = tslib_1.__decorate([
    common_1.rtfm('eventsub', 'DirectConnectionAdapter')
], DirectConnectionAdapter);
exports.DirectConnectionAdapter = DirectConnectionAdapter;

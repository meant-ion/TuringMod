import { ConnectionAdapter } from './ConnectionAdapter';
/**
 * The configuration of the reverse proxy connection adapter.
 *
 * @inheritDoc
 */
export interface ReverseProxyAdapterConfig {
    /**
     * The port the server should listen to.
     */
    port?: number;
    /**
     * The host name the reverse proxy is available under.
     */
    hostName: string;
    /**
     * The path prefix your reverse proxy redirects to the listener.
     */
    pathPrefix?: string;
}
/**
 * A WebHook connection adapter that supports a reverse proxy in front of the listener.
 *
 * @hideProtected
 */
export declare class ReverseProxyAdapter extends ConnectionAdapter {
    private readonly _hostName;
    private readonly _port;
    private readonly _pathPrefix?;
    /**
     * Creates a reverse proxy connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    constructor(options: ReverseProxyAdapterConfig);
    /** @protected */
    getListenerPort(): Promise<number>;
    /** @protected */
    getHostName(): Promise<string>;
    /** @protected */
    get pathPrefix(): string | undefined;
}
//# sourceMappingURL=ReverseProxyAdapter.d.ts.map
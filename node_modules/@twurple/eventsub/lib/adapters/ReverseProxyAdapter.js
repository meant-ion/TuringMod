"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReverseProxyAdapter = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@twurple/common");
const checks_1 = require("../checks");
const ConnectionAdapter_1 = require("./ConnectionAdapter");
/**
 * A WebHook connection adapter that supports a reverse proxy in front of the listener.
 *
 * @hideProtected
 */
let ReverseProxyAdapter = class ReverseProxyAdapter extends ConnectionAdapter_1.ConnectionAdapter {
    /**
     * Creates a reverse proxy connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    constructor(options) {
        var _a;
        super();
        checks_1.checkHostName(options.hostName);
        this._hostName = options.hostName;
        this._port = (_a = options.port) !== null && _a !== void 0 ? _a : 8080;
        this._pathPrefix = options.pathPrefix;
    }
    /** @protected */
    async getListenerPort() {
        return this._port;
    }
    /** @protected */
    async getHostName() {
        return this._hostName;
    }
    /** @protected */
    get pathPrefix() {
        return this._pathPrefix;
    }
};
ReverseProxyAdapter = tslib_1.__decorate([
    common_1.rtfm('eventsub', 'ReverseProxyAdapter')
], ReverseProxyAdapter);
exports.ReverseProxyAdapter = ReverseProxyAdapter;

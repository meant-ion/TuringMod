import type { ApiClient, HelixUser } from '@twurple/api';
import { DataObject } from '@twurple/common';
/** @private */
export interface EventSubStreamOfflineEventData {
    broadcaster_user_id: string;
    broadcaster_user_login: string;
    broadcaster_user_name: string;
}
/**
 * An EventSub event representing a stream going offline.
 */
export declare class EventSubStreamOfflineEvent extends DataObject<EventSubStreamOfflineEventData> {
    private readonly _client;
    /** @private */
    constructor(data: EventSubStreamOfflineEventData, client: ApiClient);
    /**
     * The ID of the broadcaster.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster.
     */
    get broadcasterDisplayName(): string;
    /**
     * Retrieves more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
}
//# sourceMappingURL=EventSubStreamOfflineEvent.d.ts.map
import { rawDataSymbol } from '@twurple/common';
import type { EventSubChannelPollBeginChoiceData } from './EventSubChannelPollBeginChoice';
import { EventSubChannelPollBeginChoice } from './EventSubChannelPollBeginChoice';
/** @private */
export interface EventSubChannelPollChoiceData extends EventSubChannelPollBeginChoiceData {
    bits_votes: number;
    channel_points_votes: number;
    votes: number;
}
/**
 * A choice in a poll.
 *
 * @inheritDoc
 */
export declare class EventSubChannelPollChoice extends EventSubChannelPollBeginChoice {
    /** @private */ readonly [rawDataSymbol]: EventSubChannelPollChoiceData;
    /**
     * The number of votes for the choice added by using bits.
     */
    get bitsVotes(): number;
    /**
     * The number of votes for the choice added by using channel points.
     */
    get channelPointsVotes(): number;
    /**
     * The total number of votes for the choice, including bits and channel points.
     */
    get totalVotes(): number;
}
//# sourceMappingURL=EventSubChannelPollChoice.d.ts.map
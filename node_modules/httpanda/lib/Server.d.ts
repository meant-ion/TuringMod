/// <reference types="node" />
import { ListenOptions } from 'net';
import { Router } from './Router';
import { HttpServerOptions, Request, Response, RequestHandler } from './types';
export declare class Server extends Router {
    private _httpServer?;
    private readonly _onError;
    private readonly _on404;
    constructor({ server, onError }?: HttpServerOptions);
    listen(port?: number, hostname?: string, backlog?: number): Promise<this>;
    listen(port?: number, hostname?: string): Promise<this>;
    listen(port?: number, backlog?: number): Promise<this>;
    listen(port?: number): Promise<this>;
    listen(options: ListenOptions): Promise<this>;
    listen(handle: any, backlog?: number): Promise<this>;
    listen(handle: any): Promise<this>;
    close(): Promise<unknown>;
    use(...fns: RequestHandler[]): this;
    use(path: string, ...fns: RequestHandler[]): this;
    handleRequest: (req: Request, res: Response) => void;
}
